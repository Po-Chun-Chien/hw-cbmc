on:
  release:
    types: [created]

name: Upload additional release assets
jobs:
  ubuntu-22_04-package:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Fetch dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -yq gcc g++ jq flex bison libxml2-utils ccache
      - name: Prepare ccache
        uses: actions/cache@v4
        with:
          save-always: true
          path: .ccache
          key: ${{ runner.os }}-20.04-make-gcc-${{ github.ref }}-${{ github.sha }}-PR
          restore-keys: |
            ${{ runner.os }}-20.04-make-gcc-${{ github.ref }}
            ${{ runner.os }}-20.04-make-gcc
      - name: ccache environment
        run: |
          echo "CCACHE_BASEDIR=$PWD" >> $GITHUB_ENV
          echo "CCACHE_DIR=$PWD/.ccache" >> $GITHUB_ENV
      - name: Get minisat
        run: make -C lib/cbmc/src minisat2-download
      - name: Build with make
        run: make -C src -j2 CXX="ccache g++"
      - name: Run the ebmc tests with SAT
        run: make -C regression/ebmc test
      - name: Run the verilog tests
        run: make -C regression/verilog test
      - name: Print ccache stats
        run: ccache -s
      - name: Create packages
        id: create_packages
        run: |
          VERSION=$(echo ${{ github.ref }} | cut -d "/" -f 3 | cut -d "-" -f 2)
          mkdir -p ebmc-${VERSION}/DEBIAN
          mkdir -p ebmc-${VERSION}/usr/bin
          cp src/ebmc/ebmc ebmc-${VERSION}/usr/bin
          cat << EOM > ebmc-${VERSION}/DEBIAN/control
          Package: ebmc
          Version: ${VERSION}
          Architecture: amd64
          Maintainer: Daniel Kroening <dkr@amazon.com>
          Depends:
          Installed-Size: 6600
          Homepage: http://www.cprover.org/ebmc/
          Description: The EBMC Model Checker
          EOM
          chown root:root -R ebmc-${VERSION}
          dpkg -b ebmc-${VERSION}
          deb_package_name="$(ls *.deb)"
          echo "deb_package=./build/$deb_package_name" >> $GITHUB_OUTPUT
          echo "deb_package_name=ubuntu-22.04-$deb_package_name" >> $GITHUB_OUTPUT
      - name: Get release info
        id: get_release_info
        uses: bruceadams/get-release@v1.3.2
      - name: Upload binary packages
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ${{ steps.create_packages.outputs.deb_package }}
          asset_name: ${{ steps.create_packages.outputs.deb_package_name }}
          asset_content_type: application/x-deb
